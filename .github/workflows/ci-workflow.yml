name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install conda
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget -O miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        source $HOME/miniconda/bin/activate
        conda init bash
    - name: Create and activate conda environment
      run: |
        source $HOME/miniconda/bin/activate
        conda create --name myenv python=3.10 -y
    - name: Install dependencies
      run: |
        source $HOME/miniconda/bin/activate myenv
        conda install flake8 pytest -y
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Lint with flake8
      run: |
        source $HOME/miniconda/bin/activate myenv
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    - name: Start required services
      run: |
        docker-compose up -d
        # Wait for services to be ready
        sleep 20
    - name: Start API server
      run: |
        source $HOME/miniconda/bin/activate myenv
        # Start the server in the background
        python -m app.main &
        # Give the server time to start
        sleep 10
        # Verify server is responding
        curl http://localhost:8000/test-redis || echo "Server not responding, but continuing..."
    - name: Test with pytest
      run: |
        source $HOME/miniconda/bin/activate myenv
        pytest
